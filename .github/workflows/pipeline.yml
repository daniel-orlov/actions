name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Lint
        uses: docker://golangci/golangci-lint:latest-alpine
        with:
          args: golangci-lint run -v

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: go build -o server main.go
      - name: Archive
        uses: actions/upload-artifact@v3
        with:
          name: server
          path: server

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Test
        run: |
          export GOPATH="$HOME/go/"
          export PATH=$PATH:$GOPATH/bin
          go install github.com/jstemmer/go-junit-report@latest
          go test -v ./... | go-junit-report -set-exit-code > report.xml
      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: report.xml

  docker-build:
    runs-on: ubuntu-latest
    needs: [ lint, build, test ]
    steps:
      - uses: actions/checkout@v3
      - name: Download
        uses: actions/download-artifact@v3
        with:
          name: server
          path: build
      - name: Build
        run: docker build -t ${{ github.repository }}:${{ github.sha }} ./build
      - name: Archive
        uses: actions/upload-artifact@v3
        with:
          name: image
          path: image.tar
